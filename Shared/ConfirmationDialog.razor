@code {
    public bool ShowConfirmation { get; private set; }
    public string Message { get; private set; }
    public EventCallback<bool> ConfirmationChanged { get; set; }

    public void ConfirmDelete(string message, EventCallback<bool> confirmationChanged)
    {
        Message = message;
        ConfirmationChanged = confirmationChanged;
        ShowConfirmation = true;
        StateHasChanged();
    }

    private void CloseDialog(bool confirmed)
    {
        ShowConfirmation = false;
        ConfirmationChanged.InvokeAsync(confirmed);
    }
}

@if (ShowConfirmation)
{
    <div class="modal show d-block" tabindex="-1" role="dialog" style="position: absolute; top: 20%; left: 50%; transform: translateX(-50%); z-index: 1050;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => CloseDialog(false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@Message</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="() => CloseDialog(true)">Confirmer</button>
                    <button type="button" class="btn btn-secondary" @onclick="() => CloseDialog(false)">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    <!--<div class="modal-backdrop show" style="position: fixed; width: 100%; height: 100%; top: 100; left: 0; buttom: 0;"></div>-->
}


